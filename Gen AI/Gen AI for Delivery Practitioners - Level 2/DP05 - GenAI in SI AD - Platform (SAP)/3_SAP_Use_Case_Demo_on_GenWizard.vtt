WEBVTT

0
00:00:12.680 --> 00:00:15.859
Um So this is the interface, I'm sure you have seen Gen

1
00:00:15.979 --> 00:00:17.729
Wizard for SI and A MS already.

2
00:00:17.870 --> 00:00:19.969
Uh This is the SAP version of it

3
00:00:20.940 --> 00:00:22.000
to get started.

4
00:00:22.170 --> 00:00:24.889
This is a project that I explicitly created for SAP.

5
00:00:25.020 --> 00:00:29.659
And once you launch it, what you see is the same field that and I showed you earlier,

6
00:00:29.940 --> 00:00:33.590
the left hand side talks about compressing the transformation.

7
00:00:33.599 --> 00:00:36.279
So all of our TDLC or SDLC like we call it

8
00:00:36.549 --> 00:00:38.639
uh fits into the left hand side of the

9
00:00:38.799 --> 00:00:39.650
wheel

10
00:00:39.799 --> 00:00:42.799
and right hand side is all about empowering the business,

11
00:00:42.810 --> 00:00:46.479
whether it's your industry function, use cases, whether it's cross cutting,

12
00:00:46.490 --> 00:00:49.479
use cases like data and insides or change in talent.

13
00:00:49.770 --> 00:00:52.180
What I'll focus on today is the left hand side.

14
00:00:52.189 --> 00:00:56.950
So your discover in vision, your design code build test and uh

15
00:00:57.200 --> 00:00:59.759
A MS which you probably have seen already.

16
00:01:00.099 --> 00:01:00.509
Um

17
00:01:01.479 --> 00:01:05.260
OK. With that, I'll um jump on to the actual demo.

18
00:01:05.349 --> 00:01:07.940
And what you see now on the left hand side is

19
00:01:07.949 --> 00:01:11.239
exactly the same six sections that you saw on the video,

20
00:01:11.250 --> 00:01:11.699
right?

21
00:01:11.919 --> 00:01:16.019
The first three are the left hand side discover and vision design implement,

22
00:01:16.029 --> 00:01:19.319
run evolve and the the next three industry,

23
00:01:19.330 --> 00:01:22.779
function data and insight and change and talent are

24
00:01:22.790 --> 00:01:24.930
the cross cutting ones that I spoke about earlier.

25
00:01:24.940 --> 00:01:27.330
So those are more of

26
00:01:27.470 --> 00:01:31.660
uh the uh the business oriented or value use cases.

27
00:01:32.010 --> 00:01:32.610
Now,

28
00:01:32.620 --> 00:01:34.540
um in sap all of us know that we

29
00:01:34.550 --> 00:01:38.300
usually would start regenerating a client's business process hierarchy.

30
00:01:38.309 --> 00:01:39.849
Or if client has any,

31
00:01:40.129 --> 00:01:46.319
we kind of work on completing it with our standard golden samples and build a

32
00:01:46.470 --> 00:01:46.949
uh

33
00:01:47.959 --> 00:01:53.089
uh scope processes or the the processes that are in scope for the client

34
00:01:53.290 --> 00:01:55.900
um using our repositories like B PM,

35
00:01:56.089 --> 00:01:58.339
right? So that's exactly what this use case does.

36
00:01:58.430 --> 00:02:00.169
You can input a client's hierarchy.

37
00:02:00.180 --> 00:02:00.459
Usually,

38
00:02:00.470 --> 00:02:04.660
we we had seen that clients would have a hierarchy that's either incomplete or

39
00:02:04.830 --> 00:02:07.889
has only limited levels of information like level 12 and

40
00:02:07.900 --> 00:02:10.179
three and may not have a level four or beyond.

41
00:02:10.429 --> 00:02:11.089
Um

42
00:02:11.500 --> 00:02:13.289
So we ask them to upload it,

43
00:02:13.330 --> 00:02:16.009
then we compare it against our gold golden sample

44
00:02:16.020 --> 00:02:19.570
and we will come out with a more complete,

45
00:02:19.580 --> 00:02:20.360
accurate

46
00:02:20.660 --> 00:02:23.320
uh process scope for the client.

47
00:02:23.490 --> 00:02:25.940
And then the client would have a choice

48
00:02:26.089 --> 00:02:29.960
to select the ones that make sense to that. So let me go ahead and show you

49
00:02:30.580 --> 00:02:31.440
the action.

50
00:02:31.449 --> 00:02:36.479
So if I say generate a client process hierarchy, it actually would ask me to upload

51
00:02:36.600 --> 00:02:37.800
a file and I'm

52
00:02:37.990 --> 00:02:40.020
simulated something. So I have a,

53
00:02:40.240 --> 00:02:42.600
let's say AAA process hierarchy.

54
00:02:42.610 --> 00:02:46.179
And before I actually show you I'll o I'll open that process hierarchy.

55
00:02:46.270 --> 00:02:49.779
The process hierarchy currently is up to level three as you see here, right?

56
00:02:50.000 --> 00:02:52.259
But what you will see now is I've generated

57
00:02:52.270 --> 00:02:55.229
level four after this use case is generated.

58
00:02:55.240 --> 00:02:57.759
So let me go ahead and close this before I upload.

59
00:02:58.009 --> 00:02:59.419
So I'll upload this.

60
00:03:03.690 --> 00:03:06.559
And while it is uploading, it's actually using

61
00:03:06.750 --> 00:03:07.520
all the

62
00:03:07.649 --> 00:03:10.929
knowledge that we would have in our own database saying what

63
00:03:10.940 --> 00:03:13.839
are the standard processes up to level 45 and six,

64
00:03:13.850 --> 00:03:15.179
it would also go to open A I.

65
00:03:15.289 --> 00:03:18.130
In case we don't find the right processes

66
00:03:18.300 --> 00:03:21.149
in our own repository, we always start with our own micron

67
00:03:21.289 --> 00:03:22.039
dot BBM

68
00:03:22.229 --> 00:03:23.300
and then go to open A

69
00:03:23.479 --> 00:03:23.570
I.

70
00:03:23.729 --> 00:03:26.369
So now it is doing that. It's it's

71
00:03:26.740 --> 00:03:29.610
it's checking with the golden sample and ensuring

72
00:03:29.619 --> 00:03:32.720
that it gives us output with the accurate

73
00:03:33.059 --> 00:03:34.690
uh level four. So

74
00:03:35.509 --> 00:03:38.259
let me go ahead and show you the output that it generated.

75
00:03:38.270 --> 00:03:40.490
So this is just generated by me.

76
00:03:40.669 --> 00:03:42.360
And now you will see

77
00:03:43.600 --> 00:03:46.869
all those that client had input, it was up to level three.

78
00:03:46.880 --> 00:03:49.029
But now you get further split right.

79
00:03:49.039 --> 00:03:51.479
In material master you get creation update deletion.

80
00:03:51.690 --> 00:03:53.820
Similarly, in procurement, it had

81
00:03:54.080 --> 00:03:56.250
it would give more details, you know, in

82
00:03:56.419 --> 00:04:00.130
quota agreement here, it'll give you more details of each of these.

83
00:04:00.179 --> 00:04:02.119
So this is a sample, but of course,

84
00:04:02.130 --> 00:04:05.539
client hierarchies are much larger and it would give you all those

85
00:04:05.850 --> 00:04:08.100
filled up with the accurate data.

86
00:04:08.360 --> 00:04:11.889
And then you can have your process experts to come and select and say

87
00:04:11.899 --> 00:04:15.149
this is my scope in my project or my program that I'm currently doing.

88
00:04:15.250 --> 00:04:18.329
Let's say I'm doing only, you know, master data management, you can

89
00:04:18.488 --> 00:04:20.488
pick that up and say create

90
00:04:20.678 --> 00:04:25.510
business process hierarchy, very specific to the client. So this now gets built

91
00:04:25.799 --> 00:04:27.369
into one of our my

92
00:04:27.829 --> 00:04:29.660
apps called BPH, which will,

93
00:04:29.929 --> 00:04:33.619
which you can continuously use through the delivery of the project to manage

94
00:04:33.790 --> 00:04:37.570
the scope for the design deliverables, everything in the respective

95
00:04:38.130 --> 00:04:39.799
uh process. And all of that,

96
00:04:40.040 --> 00:04:42.850
I'll, I'll open those up and, and show you how it

97
00:04:43.019 --> 00:04:47.390
gets created, but I'll move ahead in interest of time and show you the next use case,

98
00:04:47.399 --> 00:04:48.799
which is fit to standard.

99
00:04:49.019 --> 00:04:51.100
Now that you have the client's hierarchy and

100
00:04:51.109 --> 00:04:52.940
the scope identified in the previous step.

101
00:04:53.730 --> 00:04:57.500
What you do now is compare it against our golden sample.

102
00:04:57.510 --> 00:04:59.109
And for the people who are aware

103
00:04:59.260 --> 00:05:02.829
um project bolt actually created a four E mapping.

104
00:05:03.200 --> 00:05:06.420
Uh We, we calling it fit to standard. So can't understand it.

105
00:05:06.589 --> 00:05:10.089
But the four E mapping actually tells you that your current processes

106
00:05:10.440 --> 00:05:13.429
and S four standard process, how do they map

107
00:05:13.760 --> 00:05:16.690
and it actually gives you output in four E terms.

108
00:05:16.700 --> 00:05:20.260
Now, first is embrace, which means you take it, take them as its, you know,

109
00:05:20.269 --> 00:05:25.100
no change needed then is elevate where you tweak only the configurations

110
00:05:25.109 --> 00:05:28.649
then is uh enhance where you have to actually write some of

111
00:05:28.760 --> 00:05:30.750
a code to be able to get that function.

112
00:05:31.029 --> 00:05:32.500
And the last one is eliminate,

113
00:05:32.510 --> 00:05:35.600
where you would have already covered that functionality somewhere

114
00:05:35.609 --> 00:05:38.179
else and you can completely eliminate that process.

115
00:05:38.470 --> 00:05:42.859
So once you feed the input to ja I

116
00:05:43.269 --> 00:05:44.290
and, and

117
00:05:45.549 --> 00:05:48.059
uh ask it to generate the fit to standard,

118
00:05:48.070 --> 00:05:52.760
it took the same process hierarchy that you saw earlier getting generated and

119
00:05:53.019 --> 00:05:53.529
uh

120
00:05:53.850 --> 00:05:56.040
it will give you a fit to standard mapping now.

121
00:05:56.049 --> 00:06:00.250
So if you see the same process hierarchy up to level four is populated here.

122
00:06:00.260 --> 00:06:03.750
But last two columns are actually our own recommendations.

123
00:06:03.760 --> 00:06:07.209
Accenture recommendations around how will this fit the standard?

124
00:06:07.480 --> 00:06:09.519
So instead of calling it, let's say man

125
00:06:09.619 --> 00:06:12.579
material master creation, we recommend it should be called

126
00:06:12.959 --> 00:06:15.209
managed material master finish code.

127
00:06:15.640 --> 00:06:17.959
Yeah, because this is more closer to how SAPS

128
00:06:18.089 --> 00:06:18.690
four calls it

129
00:06:18.890 --> 00:06:21.540
and it can, this process can be embraced

130
00:06:21.920 --> 00:06:23.890
as in can be taken as is

131
00:06:24.720 --> 00:06:26.640
without any changes at all. OK?

132
00:06:26.649 --> 00:06:29.989
Whereas this one specifically service master creation

133
00:06:30.179 --> 00:06:32.049
needs some sort of

134
00:06:32.619 --> 00:06:33.410
elevation,

135
00:06:33.420 --> 00:06:37.950
which means you will need some configuration changes before you can use it in four.

136
00:06:38.200 --> 00:06:40.290
Similarly, you would have eliminate

137
00:06:40.619 --> 00:06:41.480
enhance

138
00:06:41.619 --> 00:06:44.929
uh where you would need some changes to the code as well

139
00:06:45.109 --> 00:06:45.959
identified.

140
00:06:46.959 --> 00:06:47.339
OK.

141
00:06:47.529 --> 00:06:49.929
With that, we can move on to the next step,

142
00:06:49.940 --> 00:06:53.089
which is actually creating the user requirements now

143
00:06:53.100 --> 00:06:55.359
that you have fit to standard maps available.

144
00:06:55.369 --> 00:06:57.779
Anything other than eliminate becomes your scope.

145
00:06:57.839 --> 00:07:02.730
Whether you take it as is embrace you and you wanna enhance it, write some a back code

146
00:07:02.880 --> 00:07:05.309
or elevate it, write some configurations.

147
00:07:05.570 --> 00:07:08.529
So those three is actually come input to this,

148
00:07:08.820 --> 00:07:12.829
which again is compared against our repository of user stories.

149
00:07:13.179 --> 00:07:17.119
If we, if we have it in our own accenture repository, we pull it from accenture.

150
00:07:17.130 --> 00:07:19.839
If not, we go to open A I and pull it from there.

151
00:07:19.850 --> 00:07:24.239
And what outcome you get is a detailed user story and I'll show you how,

152
00:07:24.390 --> 00:07:25.339
how these

153
00:07:25.459 --> 00:07:29.519
look. Um So I can go ahead and fire that prompt.

154
00:07:29.529 --> 00:07:31.880
So please generate the user stories for the business

155
00:07:31.890 --> 00:07:34.750
processes that we identified in the previous step.

156
00:07:36.269 --> 00:07:40.730
And it will generate those for us in a minute and notify us as soon as it's done,

157
00:07:41.369 --> 00:07:43.579
it's done, it's in progress, sorry.

158
00:07:44.200 --> 00:07:45.140
And while it is

159
00:07:45.829 --> 00:07:49.850
doing that, maybe I'll show you the previous version that's already run.

160
00:07:49.950 --> 00:07:53.010
So Shweta had run this a few minutes ago, but you will get

161
00:07:53.730 --> 00:07:56.480
outputs like what you see on the screen, right?

162
00:07:56.489 --> 00:07:59.790
The title of the story, the description, the acceptance criteria,

163
00:07:59.799 --> 00:08:02.100
all of this generated on the fly

164
00:08:02.320 --> 00:08:05.079
using either our repositories behind the scene or open A I.

165
00:08:05.480 --> 00:08:09.149
And of course, you have abilities to edit it, change thing if you think it,

166
00:08:09.160 --> 00:08:11.869
it's not done the job right away, right?

167
00:08:11.920 --> 00:08:16.160
And you also have abilities to select these use cases or user stories

168
00:08:16.369 --> 00:08:18.149
and push it into our

169
00:08:18.700 --> 00:08:19.920
a repository.

170
00:08:19.980 --> 00:08:25.279
It's, it's another app that will allow you to put all of these user stories together

171
00:08:25.450 --> 00:08:27.339
for the people who are familiar with that app.

172
00:08:27.350 --> 00:08:31.420
It's called uh RR A requirement, a readiness assistant.

173
00:08:31.500 --> 00:08:34.450
And it actually takes these user stories and runs it against that

174
00:08:34.719 --> 00:08:34.729
A

175
00:08:34.979 --> 00:08:38.479
Giles Invest Q principle and says this story is really good.

176
00:08:38.489 --> 00:08:41.679
This story needs some tweaking for, make it more testable,

177
00:08:41.690 --> 00:08:45.000
make it more valuable and I could give you a quick glimpse of how that

178
00:08:45.280 --> 00:08:46.469
app looks as well.

179
00:08:46.919 --> 00:08:47.849
Um So let me

180
00:08:48.539 --> 00:08:49.159
quickly

181
00:08:49.309 --> 00:08:54.989
show you how RR A is gonna look. So it actually gives you a good recommendation around

182
00:08:55.299 --> 00:08:57.690
uh how how good your user stories are

183
00:08:57.830 --> 00:08:58.539
and this

184
00:08:58.960 --> 00:09:00.659
the RR A was shown in the morning

185
00:09:00.760 --> 00:09:00.929
session

186
00:09:01.090 --> 00:09:01.229
in the

187
00:09:01.609 --> 00:09:01.650
great.

188
00:09:03.109 --> 00:09:04.400
OK, perfect. Then I need that.

189
00:09:04.780 --> 00:09:08.719
OK. So then you can get on to the next step, which so far

190
00:09:08.869 --> 00:09:11.700
this is all Greenfield. We created everything from scratch.

191
00:09:12.010 --> 00:09:14.669
This piece is where you can use it in in

192
00:09:14.679 --> 00:09:17.640
the brown field scenario where you can read your ECC objects

193
00:09:18.239 --> 00:09:19.700
and you can then

194
00:09:20.150 --> 00:09:22.989
compare it with standard objects of of S four.

195
00:09:23.000 --> 00:09:27.289
And what outputs you get is something similar to four E that I explained earlier.

196
00:09:27.299 --> 00:09:31.349
That was for processes. This will be actually for the pieces of code or objects.

197
00:09:31.520 --> 00:09:32.250
It'll say

198
00:09:32.400 --> 00:09:36.659
this code piece can be shift, lifted and shifted as its embrace

199
00:09:36.780 --> 00:09:39.890
this piece will need some enhancements and tweaking. So

200
00:09:40.099 --> 00:09:43.609
elevate this piece is actually can be eliminated.

201
00:09:43.760 --> 00:09:48.080
So it will give you very similar analysis but at the code level,

202
00:09:48.090 --> 00:09:49.190
not at the process level.

203
00:09:49.619 --> 00:09:55.190
And this is actually ECC code. So I'll not be able to show you the actual ECC output. Um

204
00:09:55.750 --> 00:10:00.640
But uh we, we have a videos that I can pass on the links to that you can observe,

205
00:10:00.650 --> 00:10:02.760
but you would be able to get a similar

206
00:10:03.150 --> 00:10:06.520
similarity analysis of all the ECC core components.

207
00:10:07.229 --> 00:10:07.650
OK.

208
00:10:09.210 --> 00:10:12.510
Then we get on the next phase which is actually creating

209
00:10:12.679 --> 00:10:13.349
uh

210
00:10:13.530 --> 00:10:16.429
D BT A standard AD M

211
00:10:16.650 --> 00:10:20.359
way of calling it here. In the third one, we call it design and implement.

212
00:10:20.549 --> 00:10:23.159
So first thing is you create your design deliverables.

213
00:10:23.169 --> 00:10:26.000
There are four types of deliverables that you can create in this.

214
00:10:26.140 --> 00:10:29.570
The T DS, the technology design, the functional design, the BP DS,

215
00:10:29.580 --> 00:10:31.609
the business trust document are configurations

216
00:10:32.200 --> 00:10:33.820
and what input is currently,

217
00:10:33.830 --> 00:10:36.474
it takes Q and A but it can pretty much take

218
00:10:36.484 --> 00:10:39.974
the inputs from previous L four level process as well.

219
00:10:40.174 --> 00:10:43.455
Or it can give if, if the clients already have their own TDFD,

220
00:10:43.465 --> 00:10:45.775
you can feed those uh to generate further.

221
00:10:45.784 --> 00:10:47.835
So if you feed FD, it'll create T DS.

222
00:10:47.955 --> 00:10:50.114
If you feed process, it'll create BP DS

223
00:10:50.484 --> 00:10:51.614
uh so on and so forth.

224
00:10:52.849 --> 00:10:55.760
OK? And I'll quickly show you how this looks. This is a copilot,

225
00:10:55.909 --> 00:10:57.669
but it, you can ask,

226
00:10:57.679 --> 00:11:00.450
it'll ask you some basic questions and what functionality let's say,

227
00:11:00.460 --> 00:11:03.039
I say finance then within finance, which modules?

228
00:11:03.049 --> 00:11:03.630
So let's say I say

229
00:11:04.469 --> 00:11:08.419
then, then it will say OK, fine. Which, which document the four that I spoke of?

230
00:11:08.429 --> 00:11:10.159
Let's say I wanna do functional design.

231
00:11:10.489 --> 00:11:15.039
Then it'll ask you what, which, which SAP system I say S four Hana.

232
00:11:15.570 --> 00:11:20.150
And then it'll ask you, you know one which, which one of these are ISFS a report

233
00:11:20.950 --> 00:11:25.580
and then it'll ask you more details around industry function, all those details.

234
00:11:25.590 --> 00:11:28.169
And in the end keep creating. So

235
00:11:28.390 --> 00:11:28.479
it,

236
00:11:29.500 --> 00:11:31.059
let's say I say cost compared

237
00:11:36.010 --> 00:11:38.200
as the uh keyword that I want sorry.

238
00:11:40.969 --> 00:11:42.929
And then it will go into our micro

239
00:11:43.090 --> 00:11:47.059
consulted repository. We we have a database which is vectorized called quasar.

240
00:11:47.799 --> 00:11:52.169
It, it searches all the sections that match with this industry, this function,

241
00:11:52.179 --> 00:11:55.590
this uh particular phrase that we've given around cost

242
00:11:55.599 --> 00:11:58.299
comparison and builds your documents section by section.

243
00:11:58.539 --> 00:11:59.750
This takes a little bit of time,

244
00:11:59.760 --> 00:12:03.590
but I'll show you offline document that I have downloaded uh

245
00:12:03.789 --> 00:12:06.349
that I can open uh for you

246
00:12:06.619 --> 00:12:07.030
and

247
00:12:07.820 --> 00:12:09.679
let this run in the background,

248
00:12:10.619 --> 00:12:12.960
but you could run uh you could build all your TDF

249
00:12:13.150 --> 00:12:13.640
according.

250
00:12:16.419 --> 00:12:16.830
OK?

251
00:12:16.840 --> 00:12:19.369
And and there will still be some sections that it may

252
00:12:19.380 --> 00:12:21.549
not find and it highlights those as I was saying,

253
00:12:21.559 --> 00:12:22.969
I didn't find the content for those,

254
00:12:22.979 --> 00:12:25.570
but there are sections that it finds and populate.

255
00:12:25.580 --> 00:12:29.890
So some of your work is already done and available to you to work on for

256
00:12:34.299 --> 00:12:37.440
going back to the Zen wizard. Um

257
00:12:37.989 --> 00:12:39.830
There are similar use cases.

258
00:12:39.840 --> 00:12:42.150
Some of these are, you know, generating configured,

259
00:12:42.159 --> 00:12:46.880
create your configurations um then generating interface mappings.

260
00:12:46.890 --> 00:12:48.630
This will create your interface mappings.

261
00:12:48.890 --> 00:12:53.280
Uh The one that I would show you is uh generating an A B A code. And again, like um IB

262
00:12:53.409 --> 00:12:56.380
A is not abundantly available on, on, on the internet.

263
00:12:56.390 --> 00:12:59.469
And that's why GP T 315 didn't have a great outcome with that.

264
00:12:59.479 --> 00:13:01.070
So we're trying with G BT four

265
00:13:01.429 --> 00:13:01.789
Tovo

266
00:13:01.950 --> 00:13:06.229
and we started seeing some improvement, but with the current uh pieces,

267
00:13:06.239 --> 00:13:08.739
we have generated some code so you can see it.

268
00:13:09.059 --> 00:13:11.190
Uh Let's say I'm gonna do a ALV report.

269
00:13:12.039 --> 00:13:13.549
If I fire this prompt,

270
00:13:13.559 --> 00:13:17.479
it will go into our repositories as well as open a eyes repository

271
00:13:17.729 --> 00:13:20.789
and generate us a web code to start

272
00:13:21.070 --> 00:13:26.469
with current accuracy is about 3040 50% and trying to work on improving it. As we go.

273
00:13:29.869 --> 00:13:31.570
You see now it has generated this

274
00:13:31.750 --> 00:13:33.880
a, a code for us for a LB report.

275
00:13:34.390 --> 00:13:35.979
There is a way that you can, you know,

276
00:13:35.989 --> 00:13:39.270
change this and look for the exact prompt behind this.

277
00:13:39.280 --> 00:13:40.359
What prompt went in?

278
00:13:40.520 --> 00:13:43.320
How does it look sys, how does the system prompt look?

279
00:13:43.330 --> 00:13:46.849
Um You know all of this, you can copy, paste it, run it on your own.

280
00:13:47.219 --> 00:13:49.090
And other feature that you would have is

281
00:13:49.330 --> 00:13:53.969
there's a prompt marketplace which allows you to not try your own prompts on,

282
00:13:53.979 --> 00:13:56.510
on different sorts of um

283
00:13:56.640 --> 00:13:57.090
uh

284
00:13:57.650 --> 00:14:01.150
uh models. Like you can go to GP T, you can go to Lama, you can go to

285
00:14:01.440 --> 00:14:04.020
uh bedrock and so on and so forth.

286
00:14:04.320 --> 00:14:08.349
Um You have abilities to edit the prompt. You have abilities to change

287
00:14:08.559 --> 00:14:09.150
and you can,

288
00:14:09.159 --> 00:14:11.640
you can harvest your own prompts as well if you've done it for

289
00:14:11.650 --> 00:14:14.820
your clients more than happy for you to come back and contribute,

290
00:14:14.830 --> 00:14:17.840
using this plus sign where you can put in your prompt,

291
00:14:17.849 --> 00:14:19.510
we will have a workflow to validate it

292
00:14:19.719 --> 00:14:21.500
and make it part of our prompt like butting

293
00:14:25.080 --> 00:14:25.090
uh

294
00:14:25.789 --> 00:14:27.409
going back.

295
00:14:28.700 --> 00:14:29.479
So,

296
00:14:29.580 --> 00:14:32.070
uh we looked at the A B A code similarly, we're working on

297
00:14:32.349 --> 00:14:32.450
and

298
00:14:32.739 --> 00:14:36.659
C which are the new uh ways of developing the uh uh uh

299
00:14:36.890 --> 00:14:38.400
SAP code uh

300
00:14:38.969 --> 00:14:40.280
that SAP has it resolved.